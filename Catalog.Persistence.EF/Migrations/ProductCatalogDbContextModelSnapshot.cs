// <auto-generated />
using System;
using Catalog.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.Persistence.EF.Migrations
{
    [DbContext(typeof(ProductCatalogDbContext))]
    partial class ProductCatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Catalog.Domain.ProductAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Catalog.Domain.ProductCategory.ProductCategoryAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);
                });

            modelBuilder.Entity("Catalog.Domain.ProductAggregate", b =>
                {
                    b.OwnsOne("Catalog.Domain.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ProductAggregateId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductAggregateId");
                        });

                    b.OwnsOne("Catalog.Domain.ProductCode", "ProductCode", b1 =>
                        {
                            b1.Property<Guid>("ProductAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductAggregateId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductAggregateId");
                        });

                    b.Navigation("Price");

                    b.Navigation("ProductCode");
                });
#pragma warning restore 612, 618
        }
    }
}
